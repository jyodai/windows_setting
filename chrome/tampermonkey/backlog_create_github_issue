// ==UserScript==
// @name         backlog_create_github_issue
// @namespace    http://tampermonkey.net/
// @version      2024-01-06
// @description  Open GitHub issue page with Backlog info (configurable repo URL via localStorage)
// @author       You
// @match        https://*.backlog.jp/view/*
// @grant        none
// ==/UserScript==

(function () {
    const STORAGE_KEY = 'backlogCreateGithubIssueUrl';

    document.addEventListener("keydown", function (event) {
        if (((event.ctrlKey && !event.metaKey) || (!event.ctrlKey && event.metaKey)) && event.key === "m") {
            event.preventDefault();
            main();
        }
    });

    function main() {
        const url = getOrPromptIssueUrl();
        if (!url) return;

        const { title, markdown } = createIssueInfo();
        const button = createMessageButton(url, title, markdown);
        setMessageButton(button);
    }

    function getOrPromptIssueUrl() {
        let url = localStorage.getItem(STORAGE_KEY);

        if (!url) {
            url = prompt("GitHubのIssue作成URLを入力してください（例: https://github.com/org/repo/issues/new）");
            if (url && url.startsWith("https://github.com/") && url.includes("/issues/new")) {
                localStorage.setItem(STORAGE_KEY, url);
            } else {
                alert("無効なURLです。");
                return null;
            }
        }

        return url;
    }

    function createIssueInfo() {
        const url = location.href;
        const number = document.getElementsByClassName("ticket__key-number")[0]?.innerText ?? "";
        const title = document.getElementsByClassName("title-group__title-text")[0]?.innerText ?? "";
        const markdown = `[${number} ${title}](${url})`;
        return { title: `${number} ${title}`, markdown };
    }

    function createMessageButton(issueUrl, title, markdown) {
        const button = document.createElement("button");
        button.id = "github-issue-button";
        button.textContent = "github_issue";

        button.addEventListener("click", () => {
            const url = new URL(issueUrl);
            url.searchParams.set("title", title);
            url.searchParams.set("body", markdown);
            window.open(url.toString(), "_blank");
        });

        return button;
    }

    function setMessageButton(button) {
        const target = document.getElementById("project-header");
        if (target && !document.getElementById("github-issue-button")) {
            target.prepend(button);
        }
    }
})();
